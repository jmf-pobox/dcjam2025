[gd_scene load_steps=6 format=3]

[ext_resource type="PackedScene" path="res://scenes/minigames/chase/chase_player.tscn" id="1_player"]
[ext_resource type="PackedScene" path="res://scenes/minigames/chase/chase_slime.tscn" id="2_slime"]

[sub_resource type="GDScript" id="GDScript_wc2vm"]
script/source = "extends Node2D

# Level manager script

func _ready():
	# Initialize level
	pass

# Called when player reaches the exit
func _on_exit_area_body_entered(body):
	if body.is_in_group(\"player\"):
		# Return to the main game
		var game_manager = get_node(\"/root/GameManager\")
		if game_manager.previous_scene != \"\":
			get_tree().change_scene_to_file(game_manager.previous_scene)
		else:
			get_tree().change_scene_to_file(\"res://scenes/levels/fp_dungeon.tscn\")
"

[sub_resource type="GDScript" id="GDScript_pause"]
script/source = "extends Node

# Handle pausing the game
func _input(event):
	if event.is_action_pressed(\"pause\"):
		# Return to main game when pausing the chase game
		var game_manager = get_node(\"/root/GameManager\")
		if game_manager.previous_scene != \"\":
			get_tree().change_scene_to_file(game_manager.previous_scene)
		else:
			get_tree().change_scene_to_file(\"res://scenes/levels/fp_dungeon.tscn\")
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_eobhf"]
size = Vector2(64, 64)

[node name="ChaseGame" type="Node2D"]
script = SubResource("GDScript_wc2vm")

[node name="PauseHandler" type="Node" parent="."]
process_mode = 3
script = SubResource("GDScript_pause")

[node name="TileMap" type="TileMap" parent="."]
format = 2

[node name="Player" parent="." instance=ExtResource("1_player")]
position = Vector2(100, 100)

[node name="SlimeEnemy" parent="." instance=ExtResource("2_slime")]
position = Vector2(300, 200)

[node name="SlimeEnemy2" parent="." instance=ExtResource("2_slime")]
position = Vector2(500, 400)

[node name="ExitArea" type="Area2D" parent="."]
position = Vector2(800, 500)

[node name="CollisionShape2D" type="CollisionShape2D" parent="ExitArea"]
shape = SubResource("RectangleShape2D_eobhf")

[node name="Sprite2D" type="Sprite2D" parent="ExitArea"]

[connection signal="body_entered" from="ExitArea" to="." method="_on_exit_area_body_entered"]
